version: '3.8'

networks:
  perfice:
    driver: bridge

services:
  # Database
  mongodb:
    image: mongo:7
    container_name: perfice-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-perfice}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-perfice_password_change_in_production}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    ports:
      - "${MONGO_PORT:-27017}:27017"
    networks:
      - perfice
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Message Queue
  kafka:
    image: apache/kafka:latest
    container_name: perfice-kafka
    environment:
      KAFKA_KRAFT_MODE: 'true'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_NUM_PARTITIONS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG_RETENTION_MS: 60000
      KAFKA_SEGMENT_MS: 60000
      KAFKA_LOG_RETENTION_CHECK_INTERVAL_MS: 30000
    networks:
      - perfice
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "/opt/kafka/bin/kafka-topics.sh", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 15s

  # Backend Services
  auth:
    build:
      context: ./server
      dockerfile: auth/Dockerfile
    image: perfice-auth:latest
    container_name: perfice-auth
    environment:
      GRPC_PORT: 5001
      HTTP_PORT: 8081
      MONGO_URL: mongodb://${MONGO_USERNAME:-perfice}:${MONGO_PASSWORD:-perfice_password_change_in_production}@mongodb:27017/perfice?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your_super_secure_jwt_secret_change_this_in_production}
      KAFKA_URL: kafka:9092
      BACKEND_BASE_URL: ${BACKEND_BASE_URL:-http://localhost:3000}
      APP_BASE_URL: ${APP_BASE_URL:-http://localhost/new}
    networks:
      - perfice
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_healthy
    restart: unless-stopped

  sync:
    build:
      context: ./server
      dockerfile: sync/Dockerfile
    image: perfice-sync:latest
    container_name: perfice-sync
    environment:
      PORT: 8082
      MONGO_URL: mongodb://${MONGO_USERNAME:-perfice}:${MONGO_PASSWORD:-perfice_password_change_in_production}@mongodb:27017/perfice?authSource=admin
      AUTH_GRPC_URL: auth:5001
      KAFKA_URL: kafka:9092
    networks:
      - perfice
    depends_on:
      auth:
        condition: service_started
      kafka:
        condition: service_healthy
    restart: unless-stopped

  integration:
    build:
      context: ./server
      dockerfile: integration/Dockerfile
    image: perfice-integration:latest
    container_name: perfice-integration
    environment:
      MONGO_URL: mongodb://${MONGO_USERNAME:-perfice}:${MONGO_PASSWORD:-perfice_password_change_in_production}@mongodb:27017/perfice?authSource=admin
      PORT: 8080
      CALLBACK_URL_BASE: ${CALLBACK_URL_BASE:-http://localhost:3000}
      AUTH_GRPC_URL: auth:5001
      KAFKA_URL: kafka:9092
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-change_this_32_char_key_production}
    networks:
      - perfice
    depends_on:
      auth:
        condition: service_started
      kafka:
        condition: service_healthy
    restart: unless-stopped

  gateway:
    build:
      context: ./server
      dockerfile: gateway/Dockerfile
    image: perfice-gateway:latest
    container_name: perfice-gateway
    ports:
      - "${GATEWAY_PORT:-3000}:3000"
    environment:
      AUTH_GRPC_URL: auth:5001
      AUTH_HTTP_URL: http://auth:8081
      SYNC_URL: http://sync:8082
      INTEGRATION_URL: http://integration:8080
      PORT: 3000
    networks:
      - perfice
    depends_on:
      auth:
        condition: service_started
      sync:
        condition: service_started
      integration:
        condition: service_started
    restart: unless-stopped

  # Frontend
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        VITE_BACKEND_URL: ${VITE_BACKEND_URL:-http://localhost:3000}
    image: perfice-client:latest
    container_name: perfice-client
    ports:
      - "${CLIENT_PORT:-80}:80"
    networks:
      - perfice
    depends_on:
      gateway:
        condition: service_started
    restart: unless-stopped

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local